/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Administrator' at '16:48 20/07/2024' with Gradle 1.12
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.12/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
*/
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'provided-base'

// name='CascadingETLFramework'
group='com.trung'
version='1.0'
buildDir = 'target'

ext.hadoopVersion = '2.10.2'
ext.cascadingVersion = '3.1.0'

buildscript {
    repositories {
        maven { url "https://repo1.maven.org/maven2" }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.1'
    }
}

sourceSets {
    main.java.srcDir "src/main/etlpipelines"
}

jar {
    description = "Hadoop-ready jar file for ETL pipelines."
    baseName 'pipeline'

    doFirst {
        into( "lib") {
          from { configurations.compile.minus( [configurations.provided] ) }
        }
    }

    manifest {
        attributes("Main-Class": "etlpipelines.Main")
    }

    doLast {
        println '>>>' + project.configurations.compile.dependencies
    }
}

repositories {
    mavenLocal()
    maven { url "https://repo1.maven.org/maven2" }
    maven { url "https://conjars.wensel.net/repo/" }
    // maven { url "https://repo.hortonworks.com/content/repositories/releases/" }
}

dependencies {
    compile(group: 'cascading', name: 'cascading-core', version: cascadingVersion)
    compile(group: 'cascading', name: 'cascading-local', version: cascadingVersion)
    compile(group: 'cascading', name: 'cascading-expression', version: cascadingVersion)
    compile(group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion)

    compile(group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoopVersion)
    compile(group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoopVersion)
    compile(group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoopVersion)
}